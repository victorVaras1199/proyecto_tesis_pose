{
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint"
	],
	"extends": [
		"plugin:@typescript-eslint/recommended",
		"plugin:prettier/recommended"
	],
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": "./tsconfig.json"
	},
	"ignorePatterns": [
		"tailwind.config.js",
		"postcss.config.js",
		"vite.config.ts"
	],
	"rules": {
		"no-magic-numbers": "off",
		"eqeqeq": [
			"error",
			"always"
		],
		"indent": [
			"error",
			"tab"
		],
		"linebreak-style": [
			"error",
			"unix"
		],
		"quotes": [
			"error",
			"double"
		],
		"semi": [
			"error",
			"always"
		],
		"@typescript-eslint/explicit-module-boundary-types": "error",
		"@typescript-eslint/explicit-function-return-type": "error",
		"no-empty-function": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/ban-tslint-comment": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/consistent-type-exports": "error",
		"@typescript-eslint/no-array-delete": "error",
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-for-in-array": "error",
		"@typescript-eslint/no-import-type-side-effects": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-mixed-enums": "error",
		"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-non-null-assertion": "off",
		"@typescript-eslint/no-redundant-type-constituents": "error",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/consistent-type-definitions": "off",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/no-unnecessary-type-assertion": "error",
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-unsafe-enum-comparison": "error",
		"@typescript-eslint/no-useless-empty-export": "error",
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/prefer-find": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-includes": "error",
		"@typescript-eslint/prefer-literal-enum-member": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/prefer-regexp-exec": "error",
		"@typescript-eslint/prefer-string-starts-ends-with": "error",
		"@typescript-eslint/no-inferrable-types": "off",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/strict-boolean-expressions": [
			"error",
			{
				"allowString": true,
				"allowNumber": true,
				"allowNullableObject": true,
				"allowNullableBoolean": false,
				"allowNullableString": false,
				"allowNullableNumber": false,
				"allowNullableEnum": false,
				"allowAny": false,
				"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
			}
		],
		"@typescript-eslint/restrict-plus-operands": [
			"error",
			{
				"allowAny": false,
				"allowBoolean": false,
				"allowNullish": false,
				"allowNumberAndString": false,
				"allowRegExp": false
			}
		],
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": [
			"error",
			{
				"allowComparingNullableBooleansToTrue": true,
				"allowComparingNullableBooleansToFalse": true
			}
		],
		"@typescript-eslint/no-unnecessary-condition": [
			"error",
			{
				"allowConstantLoopConditions": false,
				"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
			}
		],
		"@typescript-eslint/no-this-alias": [
			"error",
			{
				"allowDestructuring": true
			}
		],
		"@typescript-eslint/explicit-member-accessibility": [
			"error",
			{
				"accessibility": "explicit"
			}
		],
		"@typescript-eslint/no-empty-interface": [
			"error",
			{
				"allowSingleExtends": false
			}
		],
		"@typescript-eslint/no-duplicate-type-constituents": [
			"error",
			{
				"ignoreIntersections": false,
				"ignoreUnions": false
			}
		],
		"@typescript-eslint/no-confusing-void-expression": [
			"error",
			{
				"ignoreArrowShorthand": false,
				"ignoreVoidOperator": false
			}
		],
		"@typescript-eslint/prefer-optional-chain": [
			"error",
			{
				"checkAny": true,
				"checkUnknown": true,
				"checkString": true,
				"checkNumber": true,
				"checkBoolean": true,
				"checkBigInt": true,
				"requireNullish": false,
				"allowPotentiallyUnsafeFixesThatModifyTheReturnTypeIKnowWhatImDoing": false
			}
		],
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "array"
			}
		],
		"@typescript-eslint/ban-ts-comment": [
			"error",
			{
				"ts-expect-error": false,
				"ts-ignore": false,
				"ts-nocheck": false,
				"ts-check": false
			}
		],
		"prettier/prettier": [
			"error",
			{
				"plugins": [
					"prettier-plugin-tailwindcss"
				],
				"arrowParens": "always",
				"endOfLine": "lf",
				"singleAttributePerLine": false,
				"singleQuote": false,
				"semi": true,
				"bracketSpacing": true,
				"bracketSameLine": false,
				"proseWrap": "always",
				"tabWidth": 4,
				"trailingComma": "none",
				"useTabs": true,
				"printWidth": 1000,
				"quoteProps": "as-needed",
				"jsxSingleQuote": false
			}
		]
	}
}
